namespace Demo
{
    internal class Program
    {
        static void Main()
        {
            #region Implicit Typed Local Variables [var - dynamic]

            //// var
            //// C# Keyword
            //// Compiler Detect The Type Of Variable By The Initial Value At Compile Time

            //var X = 10;
            //Console.WriteLine(X);

            //var Temp = new { Id = 10, Name = "Diaa" };
            //Console.WriteLine(Temp);

            //// dynamic
            //// C# Keyword
            //// CLR detect The Type At Runtime By The Last Value
            //// At Compile Time The Compiler Put This Variable As Object

            //dynamic Y = true;
            //Y = "Ahmed";
            //Console.WriteLine(Y);

            #endregion

            #region Extention Method

            //// Extention Method 
            //// This Is A Method Can I Call It By Class As A Object Member Of This Class
            //// And Can Call It By The Original Class As A Static Method

            //int X = 15;

            //Helper.Print(X);
            //X.Print();

            #endregion

            #region Anonymous Type

            // When I Need To Make Class To Use It One Time 
            // OR I Need To Store Data In Class And I Don't Know The Types Of Data
            // I Use The Anonymous Type
            // Anonymous Type Is A Class Generated By Compiler At Compile Time
            // And Compiler Implement The Main Methods Of This Class
            // Like ToString() , Equals() --> To Equal By Value , GetHashCode()

            var Result = new { ID = 10, Name = "Diaa", Salary = 5000 };
            // Must Initialize The Properties
            // This Properties Get Only After Declaration
            #endregion

            #region LINQ

            // LINQ : Language Independent Query
            // This Is A 40+ Functions (Operators) Use Them Against Data Regardless Data Store
            // The ORM Take This Functions And Convert It To Statement Work On The Technology Of Data Store

            // LINQ Syntax:
                // -- Fluent Suntax
                // -- Query Expression {Same Like Sql Statements}

            // Most Of Query Operators In LINQ Is Deffered Execution
            // Mean The Operator Execute When Data Enumeration

            #endregion
        }
    }
}
